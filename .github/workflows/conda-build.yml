# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-

name: Build conda package
on:
  push:

  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.CONFIG }}
    runs-on: ${{ matrix.runs_on }}
    timeout-minutes: 720
    strategy:
      fail-fast: false
      matrix:
        include:
          - CONFIG: linux_64_c_compiler_version14cuda_compiler_version12.9cxx_compiler_version14python3.12.____cpython
            UPLOAD_PACKAGES: True
            os: ubuntu
            runs_on: ['cirun-openstack-cpu-large--${{ github.run_id }}-linux_64_c_compiler_version14cuda_compil_he168ab6f', 'linux', 'x64', 'self-hosted']
            DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
          - CONFIG: linux_64_c_compiler_version19cuda_compiler_versionNonecxx_compiler_version19python3.12.____cpython
            UPLOAD_PACKAGES: True
            os: ubuntu
            runs_on: ['cirun-openstack-cpu-large--${{ github.run_id }}-linux_64_c_compiler_version19cuda_compil_hc095a5c5', 'linux', 'x64', 'self-hosted']
            DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
          - CONFIG: linux_aarch64_c_compiler_version13cuda_compiler_versionNonecxx_compiler_version13python3.12.____cpython
            UPLOAD_PACKAGES: True
            os: ubuntu
            runs_on: ['cirun-openstack-cpu-large--${{ github.run_id }}-linux_aarch64_c_compiler_version13cuda_c_hf9293cb5', 'linux', 'x64', 'self-hosted']
            DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
    steps:

    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Build on Linux
      id: build-linux
      if: matrix.os == 'ubuntu'
      env:
        CONFIG: ${{ matrix.CONFIG }}
        UPLOAD_PACKAGES: ${{ matrix.UPLOAD_PACKAGES }}
        DOCKER_IMAGE: ${{ matrix.DOCKER_IMAGE }}
        CI: github_actions
        CONDA_FORGE_DOCKER_RUN_ARGS: "${{ matrix.CONDA_FORGE_DOCKER_RUN_ARGS }}"
        BINSTAR_TOKEN: ${{ secrets.BINSTAR_TOKEN }}
        FEEDSTOCK_TOKEN: ${{ secrets.FEEDSTOCK_TOKEN }}
        STAGING_BINSTAR_TOKEN: ${{ secrets.STAGING_BINSTAR_TOKEN }}
      shell: bash
      run: |
        if [[ "$(uname -m)" == "x86_64" ]]; then
          echo "::group::Configure binfmt_misc"
          docker run --rm --privileged multiarch/qemu-user-static:register --reset --credential yes
        fi
        export flow_run_id="github_$GITHUB_RUN_ID"
        export remote_url="https://github.com/$GITHUB_REPOSITORY"
        export sha="$GITHUB_SHA"
        export FEEDSTOCK_NAME="$(basename $GITHUB_REPOSITORY)"
        export GIT_BRANCH="$(basename $GITHUB_REF)"
        if [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
          export IS_PR_BUILD="True"
        else
          export IS_PR_BUILD="False"
        fi
        echo "::endgroup::"
        ./.scripts/run_docker_build.sh

    - name: Build on macOS
      id: build-macos
      if: matrix.os == 'macos'
      env:
        CONFIG: ${{ matrix.CONFIG }}
        UPLOAD_PACKAGES: ${{ matrix.UPLOAD_PACKAGES }}
        CI: github_actions
        BINSTAR_TOKEN: ${{ secrets.BINSTAR_TOKEN }}
        FEEDSTOCK_TOKEN: ${{ secrets.FEEDSTOCK_TOKEN }}
        STAGING_BINSTAR_TOKEN: ${{ secrets.STAGING_BINSTAR_TOKEN }}
      shell: bash
      run: |
        export flow_run_id="github_$GITHUB_RUN_ID"
        export remote_url="https://github.com/$GITHUB_REPOSITORY"
        export sha="$GITHUB_SHA"
        export FEEDSTOCK_NAME="$(basename $GITHUB_REPOSITORY)"
        export GIT_BRANCH="$(basename $GITHUB_REF)"
        if [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
          export IS_PR_BUILD="True"
        else
          export IS_PR_BUILD="False"
        fi
        ./.scripts/run_osx_build.sh

    - name: Build on windows
      id: build-windows
      if: matrix.os == 'windows'
      shell: cmd
      run: |
        set "flow_run_id=github_%GITHUB_RUN_ID%"
        set "remote_url=https://github.com/%GITHUB_REPOSITORY%"
        set "sha=%GITHUB_SHA%"
        call ".scripts\run_win_build.bat"
      env:
        # default value; make it explicit, as it needs to match with artefact
        # generation below. Not configurable for now, can be revisited later
        CONDA_BLD_DIR: C:\bld
        MINIFORGE_HOME: D:\Miniforge
        PYTHONUNBUFFERED: 1
        CONFIG: ${{ matrix.CONFIG }}
        CI: github_actions
        UPLOAD_PACKAGES: ${{ matrix.UPLOAD_PACKAGES }}
        BINSTAR_TOKEN: ${{ secrets.BINSTAR_TOKEN }}
        FEEDSTOCK_TOKEN: ${{ secrets.FEEDSTOCK_TOKEN }}
        STAGING_BINSTAR_TOKEN: ${{ secrets.STAGING_BINSTAR_TOKEN }}