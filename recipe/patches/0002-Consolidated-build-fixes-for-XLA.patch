From 1dd800f6f64d0948feccef00840d74b5c61094e0 Mon Sep 17 00:00:00 2001
From: "Uwe L. Korn" <uwe.korn@quantco.com>
Date: Thu, 14 Dec 2023 17:06:15 +0100
Subject: [PATCH 2/4] Consolidated build fixes for XLA

jax vendors xla, but only populates the sources through bazel, so we cannot
patch as usual through conda, but rather need to teach the bazel build file
for xla to apply those patches.

To maintain/rebase these patches, use a checkout of https://github.com/openxla/xla,
and then rebase to the commit of xla being used by jax, which can be found in
https://github.com/jax-ml/jax/blob/jax-v{{ version }}/third_party/xla/workspace.bzl
which is also where we're patching in the list of patches to apply to xla.

Co-Authored-By: H. Vetinari <h.vetinari@gmx.com>
---
 ...pport-third-party-build-of-boringssl.patch |  51 ++++
 third_party/xla/0002-Fix-abseil-headers.patch |  73 +++++
 .../xla/0003-Omit-usage-of-StrFormat.patch    |  25 ++
 ...0004-Add-missing-bits-absl-systemlib.patch | 262 ++++++++++++++++++
 ...ther-absl-log-is-already-initialized.patch |  58 ++++
 third_party/xla/workspace.bzl                 |   7 +
 6 files changed, 476 insertions(+)
 create mode 100644 third_party/xla/0001-Support-third-party-build-of-boringssl.patch
 create mode 100644 third_party/xla/0002-Fix-abseil-headers.patch
 create mode 100644 third_party/xla/0003-Omit-usage-of-StrFormat.patch
 create mode 100644 third_party/xla/0004-Add-missing-bits-absl-systemlib.patch
 create mode 100644 third_party/xla/0005-Check-whether-absl-log-is-already-initialized.patch

diff --git a/third_party/xla/0001-Support-third-party-build-of-boringssl.patch b/third_party/xla/0001-Support-third-party-build-of-boringssl.patch
new file mode 100644
index 000000000..8554f5126
--- /dev/null
+++ b/third_party/xla/0001-Support-third-party-build-of-boringssl.patch
@@ -0,0 +1,51 @@
+From c6bf0f14e159dcbdc99c725823d23e1d26b73a04 Mon Sep 17 00:00:00 2001
+From: "Uwe L. Korn" <uwe.korn@quantco.com>
+Date: Thu, 14 Dec 2023 15:04:51 +0100
+Subject: [PATCH 1/5] Support third-party build of boringssl
+
+---
+ third_party/boringssl.BUILD | 21 +++++++++++++++++++++
+ workspace2.bzl              |  2 +-
+ 2 files changed, 22 insertions(+), 1 deletion(-)
+ create mode 100644 third_party/boringssl.BUILD
+
+diff --git a/third_party/boringssl.BUILD b/third_party/boringssl.BUILD
+new file mode 100644
+index 0000000000..bc4c533403
+--- /dev/null
++++ b/third_party/boringssl.BUILD
+@@ -0,0 +1,21 @@
++licenses(["notice"])
++
++filegroup(
++    name = "LICENSE",
++    visibility = ["//visibility:public"],
++)
++
++cc_library(
++    name = "crypto",
++    linkopts = ["-lcrypto"],
++    visibility = ["//visibility:public"],
++)
++
++cc_library(
++    name = "ssl",
++    linkopts = ["-lssl"],
++    visibility = ["//visibility:public"],
++    deps = [
++        ":crypto",
++    ],
++)
+diff --git a/workspace2.bzl b/workspace2.bzl
+index cded32c8ca..5fb10ca45f 100644
+--- a/workspace2.bzl
++++ b/workspace2.bzl
+@@ -108,7 +108,7 @@ def _tf_repositories():
+         name = "boringssl",
+         sha256 = "9dc53f851107eaf87b391136d13b815df97ec8f76dadb487b58b2fc45e624d2c",
+         strip_prefix = "boringssl-c00d7ca810e93780bd0c8ee4eea28f4f2ea4bcdc",
+-        system_build_file = "//third_party/systemlibs:boringssl.BUILD",
++        system_build_file = "//third_party:boringssl.BUILD",
+         urls = tf_mirror_urls("https://github.com/google/boringssl/archive/c00d7ca810e93780bd0c8ee4eea28f4f2ea4bcdc.tar.gz"),
+     )
+ 
diff --git a/third_party/xla/0002-Fix-abseil-headers.patch b/third_party/xla/0002-Fix-abseil-headers.patch
new file mode 100644
index 000000000..7b2084d01
--- /dev/null
+++ b/third_party/xla/0002-Fix-abseil-headers.patch
@@ -0,0 +1,73 @@
+From 1620a0eb9135e380b59583539080337853c130aa Mon Sep 17 00:00:00 2001
+From: "Uwe L. Korn" <uwe.korn@quantco.com>
+Date: Thu, 23 May 2024 15:45:52 +0200
+Subject: [PATCH 2/5] Fix abseil headers
+
+---
+ xla/python/ifrt_proxy/common/BUILD    | 3 +++
+ xla/tsl/distributed_runtime/rpc/BUILD | 1 +
+ xla/tsl/platform/default/BUILD        | 2 ++
+ xla/tsl/profiler/rpc/client/BUILD     | 4 ++++
+ 4 files changed, 10 insertions(+)
+
+diff --git a/xla/python/ifrt_proxy/common/BUILD b/xla/python/ifrt_proxy/common/BUILD
+index 5da3b67ecb..c684b54d52 100644
+--- a/xla/python/ifrt_proxy/common/BUILD
++++ b/xla/python/ifrt_proxy/common/BUILD
+@@ -51,6 +51,9 @@ cc_library(
+         "@com_github_grpc_grpc//:grpc++",
+         "@com_google_absl//absl/log",
+         "@com_google_absl//absl/log:check",
++        "@com_google_absl//absl/status",
++        "@com_google_absl//absl/status:statusor",
++        "@com_google_absl//absl/strings",
+         "@tsl//tsl/platform",
+     ],
+     alwayslink = True,
+diff --git a/xla/tsl/distributed_runtime/rpc/BUILD b/xla/tsl/distributed_runtime/rpc/BUILD
+index 83aaccd1d9..dec829ddc7 100644
+--- a/xla/tsl/distributed_runtime/rpc/BUILD
++++ b/xla/tsl/distributed_runtime/rpc/BUILD
+@@ -39,6 +39,7 @@ cc_library(
+         "//xla/tsl/platform:status",
+         "//xla/tsl/protobuf:distributed_runtime_payloads_proto_cc",
+         "@com_google_absl//absl/status",
++        "@com_google_absl//absl/status:statusor",
+         "@com_google_absl//absl/strings:cord",
+         "@tsl//tsl/platform:protobuf",
+         "@tsl//tsl/platform:stringpiece",
+diff --git a/xla/tsl/platform/default/BUILD b/xla/tsl/platform/default/BUILD
+index 829cef6d2a..ae97fe2b92 100644
+--- a/xla/tsl/platform/default/BUILD
++++ b/xla/tsl/platform/default/BUILD
+@@ -237,6 +237,8 @@ cc_library(
+     deps = [
+         "//xla/tsl/platform:logging",
+         "@com_google_absl//absl/log:check",
++        "@com_google_absl//absl/status",
++        "@com_google_absl//absl/status:statusor",
+     ] + tsl_grpc_cc_dependencies(),
+ )
+ 
+diff --git a/xla/tsl/profiler/rpc/client/BUILD b/xla/tsl/profiler/rpc/client/BUILD
+index c2554c43cd..5430b49357 100644
+--- a/xla/tsl/profiler/rpc/client/BUILD
++++ b/xla/tsl/profiler/rpc/client/BUILD
+@@ -99,6 +99,8 @@ cc_library(
+     deps = [
+         ":profiler_client_impl",
+         "//xla/tsl/platform:status",
++        "@com_google_absl//absl/status",
++        "@com_google_absl//absl/status:statusor",
+         "@com_google_absl//absl/strings",
+         "@com_google_absl//absl/time",
+         "@tsl//tsl/profiler/protobuf:profiler_analysis_cc_grpc_proto",
+@@ -126,6 +128,8 @@ cc_library(
+         "//xla/tsl/platform:status",
+         "//xla/tsl/platform:types",
+         "//xla/tsl/protobuf:error_codes_proto_impl_cc",
++        "@com_google_absl//absl/status",
++        "@com_google_absl//absl/status:statusor",
+         "@com_google_absl//absl/memory",
+         "@com_google_absl//absl/strings",
+         "@com_google_absl//absl/time",
diff --git a/third_party/xla/0003-Omit-usage-of-StrFormat.patch b/third_party/xla/0003-Omit-usage-of-StrFormat.patch
new file mode 100644
index 000000000..ac7be8f59
--- /dev/null
+++ b/third_party/xla/0003-Omit-usage-of-StrFormat.patch
@@ -0,0 +1,25 @@
+From 7240379e230c6095e8e490aa8c00e9dc97c0c4f8 Mon Sep 17 00:00:00 2001
+From: "Uwe L. Korn" <uwe.korn@quantco.com>
+Date: Thu, 4 Jul 2024 10:36:03 +0200
+Subject: [PATCH 3/5] Omit usage of StrFormat
+
+---
+ xla/stream_executor/gpu/gpu_executor.h | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+diff --git a/xla/stream_executor/gpu/gpu_executor.h b/xla/stream_executor/gpu/gpu_executor.h
+index ad9b10e3aa..a261c3071d 100644
+--- a/xla/stream_executor/gpu/gpu_executor.h
++++ b/xla/stream_executor/gpu/gpu_executor.h
+@@ -17,6 +17,11 @@ limitations under the License.
+ #define XLA_STREAM_EXECUTOR_GPU_GPU_EXECUTOR_H_
+ 
+ #include <cstdint>
++#include <memory>
++#include <optional>
++#include <string>
++#include <sstream>
++#include <unordered_map>
+ #include <utility>
+ #include <variant>
+ #include <vector>
diff --git a/third_party/xla/0004-Add-missing-bits-absl-systemlib.patch b/third_party/xla/0004-Add-missing-bits-absl-systemlib.patch
new file mode 100644
index 000000000..d1ffe736c
--- /dev/null
+++ b/third_party/xla/0004-Add-missing-bits-absl-systemlib.patch
@@ -0,0 +1,262 @@
+From fa66d4f7f1597cd20962cae167c0a9f09080954b Mon Sep 17 00:00:00 2001
+From: "Uwe L. Korn" <uwe.korn@quantco.com>
+Date: Thu, 4 Jul 2024 15:58:32 +0200
+Subject: [PATCH 4/5] Add missing bits absl systemlib
+
+---
+ .../third_party/absl/system.absl.base.BUILD   | 16 ++++
+ .../third_party/absl/system.absl.crc.BUILD    | 70 +++++++++++++++++
+ .../third_party/absl/system.absl.flags.BUILD  |  2 +-
+ .../third_party/absl/system.absl.log.BUILD    | 78 +++++++++++++++++++
+ .../absl/system.absl.strings.BUILD            | 12 +++
+ .../tsl/third_party/absl/workspace.bzl        |  2 +
+ 6 files changed, 179 insertions(+), 1 deletion(-)
+ create mode 100644 third_party/tsl/third_party/absl/system.absl.crc.BUILD
+ create mode 100644 third_party/tsl/third_party/absl/system.absl.log.BUILD
+
+diff --git a/third_party/tsl/third_party/absl/system.absl.base.BUILD b/third_party/tsl/third_party/absl/system.absl.base.BUILD
+index d6bf8748de..b77fe118e3 100644
+--- a/third_party/tsl/third_party/absl/system.absl.base.BUILD
++++ b/third_party/tsl/third_party/absl/system.absl.base.BUILD
+@@ -20,6 +20,14 @@ cc_library(
+     linkopts = ["-labsl_log_severity"],
+ )
+ 
++cc_library(
++    name = "nullability",
++    deps = [
++        ":core_headers",
++        "//absl/meta:type_traits",
++    ],
++)
++
+ cc_library(
+     name = "raw_logging_internal",
+     linkopts = ["-labsl_raw_logging_internal"],
+@@ -105,3 +113,11 @@ cc_library(
+         "//absl:__subpackages__",
+     ],
+ )
++
++cc_library(
++    name = "prefetch",
++    deps = [
++        ":config",
++        ":core_headers",
++    ],
++)
+diff --git a/third_party/tsl/third_party/absl/system.absl.crc.BUILD b/third_party/tsl/third_party/absl/system.absl.crc.BUILD
+new file mode 100644
+index 0000000000..487c36ff45
+--- /dev/null
++++ b/third_party/tsl/third_party/absl/system.absl.crc.BUILD
+@@ -0,0 +1,70 @@
++load("@rules_cc//cc:defs.bzl", "cc_library")
++
++package(default_visibility = ["//visibility:public"])
++
++cc_library(
++    name = "crc32c",
++    linkopts = [
++        "-labsl_crc32c",
++        "-labsl_crc_cord_state",
++        "-labsl_crc_cpu_detect",
++        "-labsl_crc_internal",
++    ],
++    deps = [
++        ":cpu_detect",
++        ":crc_internal",
++        ":non_temporal_memcpy",
++        "//absl/base:config",
++        "//absl/base:core_headers",
++        "//absl/base:endian",
++        "//absl/base:prefetch",
++        "//absl/strings",
++        "//absl/strings:str_format",
++    ],
++)
++
++cc_library(
++    name = "cpu_detect",
++    visibility = ["//visibility:private"],
++    deps = [
++        "//absl/base",
++        "//absl/base:config",
++    ],
++)
++
++cc_library(
++    name = "crc_internal",
++    visibility = ["//visibility:private"],
++    deps = [
++        ":cpu_detect",
++        "//absl/base:config",
++        "//absl/base:core_headers",
++        "//absl/base:endian",
++        "//absl/base:prefetch",
++        "//absl/base:raw_logging_internal",
++        "//absl/memory",
++        "//absl/numeric:bits",
++    ],
++)
++
++cc_library(
++    name = "non_temporal_memcpy",
++    visibility = [
++        ":__pkg__",
++    ],
++    deps = [
++        ":non_temporal_arm_intrinsics",
++        "//absl/base:config",
++        "//absl/base:core_headers",
++    ],
++)
++
++cc_library(
++    name = "non_temporal_arm_intrinsics",
++    visibility = [
++        ":__pkg__",
++    ],
++    deps = [
++        "//absl/base:config",
++    ],
++)
+diff --git a/third_party/tsl/third_party/absl/system.absl.flags.BUILD b/third_party/tsl/third_party/absl/system.absl.flags.BUILD
+index aff653c7e5..5f95b11dec 100644
+--- a/third_party/tsl/third_party/absl/system.absl.flags.BUILD
++++ b/third_party/tsl/third_party/absl/system.absl.flags.BUILD
+@@ -97,7 +97,7 @@ cc_library(
+ 
+ cc_library(
+     name = "flag",
+-    linkopts = ["-labsl_flags"],
++    linkopts = ["-labsl_flags_usage"],
+     deps = [
+         ":config",
+         ":flag_internal",
+diff --git a/third_party/tsl/third_party/absl/system.absl.log.BUILD b/third_party/tsl/third_party/absl/system.absl.log.BUILD
+new file mode 100644
+index 0000000000..c23aa51acf
+--- /dev/null
++++ b/third_party/tsl/third_party/absl/system.absl.log.BUILD
+@@ -0,0 +1,78 @@
++load("@rules_cc//cc:defs.bzl", "cc_library")
++
++package(default_visibility = ["//visibility:public"])
++
++cc_library(
++    name = "die_if_null",
++    linkopts = ["-labsl_die_if_null"],
++    deps = [
++        ":log",
++        "//absl/base:config",
++        "//absl/base:core_headers",
++        "//absl/strings",
++    ],
++)
++
++cc_library(
++    name = "log",
++    linkopts = [
++        "-labsl_vlog_config_internal",
++        "-labsl_log_internal_conditions",
++        "-labsl_log_internal_check_op",
++        "-labsl_log_internal_message",
++        "-labsl_log_internal_nullguard",
++        "-labsl_synchronization",
++        "-labsl_kernel_timeout_internal",
++        "-labsl_cordz_info",
++        "-labsl_cordz_functions",
++        "-labsl_log_internal_globals"
++    ],
++)
++
++cc_library(
++    name = "check",
++    linkopts = [
++        "-labsl_vlog_config_internal",
++        "-labsl_log_internal_check_op",
++        "-labsl_log_internal_message",
++        "-labsl_log_internal_nullguard",
++    ],
++)
++
++cc_library(
++    name = "globals",
++    linkopts = [
++        "-labsl_log_globals",
++        "-labsl_log_severity",
++        "-labsl_raw_logging_internal",
++        "-labsl_vlog_config_internal",
++    ],
++    deps = [
++        ":log",
++        "//absl/base:config",
++        "//absl/base:core_headers",
++        "//absl/hash",
++        "//absl/strings",
++    ],
++)
++
++cc_library(
++    name = "initialize",
++    linkopts = [
++        "-labsl_log_initialize",
++    ],
++)
++
++cc_library(
++    name = "log_sink",
++    linkopts = [
++        "-labsl_log_internal_log_sink_set",
++    ],
++)
++
++cc_library(
++    name = "log_entry",
++    linkopts = [
++        "-labsl_log_internal_log_sink_set",
++    ],
++)
+diff --git a/third_party/tsl/third_party/absl/system.absl.strings.BUILD b/third_party/tsl/third_party/absl/system.absl.strings.BUILD
+index fa9a7a84f6..6a898a6d48 100644
+--- a/third_party/tsl/third_party/absl/system.absl.strings.BUILD
++++ b/third_party/tsl/third_party/absl/system.absl.strings.BUILD
+@@ -2,6 +2,18 @@ load("@rules_cc//cc:defs.bzl", "cc_library")
+ 
+ package(default_visibility = ["//visibility:public"])
+ 
++cc_library(
++    name = "string_view",
++    linkopts = ["-labsl_string_view"],
++    deps = [
++        "//absl/base",
++        "//absl/base:config",
++        "//absl/base:core_headers",
++        "//absl/base:nullability",
++        "//absl/base:throw_delegate",
++    ],
++)
++
+ cc_library(
+     name = "strings",
+     linkopts = ["-labsl_strings"],
+diff --git a/third_party/tsl/third_party/absl/workspace.bzl b/third_party/tsl/third_party/absl/workspace.bzl
+index d5973b13b3..0bb3fbbf07 100644
+--- a/third_party/tsl/third_party/absl/workspace.bzl
++++ b/third_party/tsl/third_party/absl/workspace.bzl
+@@ -14,12 +14,14 @@ def repo():
+     SYS_DIRS = [
+         "algorithm",
+         "base",
++        "crc",
+         "cleanup",
+         "container",
+         "debugging",
+         "flags",
+         "functional",
+         "hash",
++        "log",
+         "memory",
+         "meta",
+         "numeric",
diff --git a/third_party/xla/0005-Check-whether-absl-log-is-already-initialized.patch b/third_party/xla/0005-Check-whether-absl-log-is-already-initialized.patch
new file mode 100644
index 000000000..271a3ca1e
--- /dev/null
+++ b/third_party/xla/0005-Check-whether-absl-log-is-already-initialized.patch
@@ -0,0 +1,58 @@
+From 9ebd25248eda049702cb781894ca0e097f6843b0 Mon Sep 17 00:00:00 2001
+From: "Uwe L. Korn" <uwe.korn@quantco.com>
+Date: Fri, 22 Nov 2024 10:51:18 +0100
+Subject: [PATCH 5/5] Check whether absl log is already initialized
+
+---
+ xla/pjrt/c/pjrt_c_api_gpu.cc | 7 ++++++-
+ xla/python/logging.cc        | 7 ++++++-
+ 2 files changed, 12 insertions(+), 2 deletions(-)
+
+diff --git a/xla/pjrt/c/pjrt_c_api_gpu.cc b/xla/pjrt/c/pjrt_c_api_gpu.cc
+index fe836332be..895f40524d 100644
+--- a/xla/pjrt/c/pjrt_c_api_gpu.cc
++++ b/xla/pjrt/c/pjrt_c_api_gpu.cc
+@@ -17,6 +17,7 @@ limitations under the License.
+ 
+ #include "absl/base/call_once.h"
+ #include "absl/log/initialize.h"
++#include "absl/log/internal/globals.h"
+ #include "xla/pjrt/c/pjrt_c_api.h"
+ #include "xla/pjrt/c/pjrt_c_api_gpu_internal.h"
+ #include "tsl/platform/platform.h"
+@@ -25,7 +26,11 @@ const PJRT_Api* GetPjrtApi() {
+   // Initialize ABSL logging because code within XLA uses it.
+ #ifndef PLATFORM_GOOGLE
+   static absl::once_flag once;
+-  absl::call_once(once, []() { absl::InitializeLog(); });
++  absl::call_once(once, []() {
++    if (!absl::log_internal::IsInitialized()) {
++      absl::InitializeLog();
++    }
++  });
+ #endif  // PLATFORM_GOOGLE
+   return pjrt::gpu_plugin::GetGpuPjrtApi();
+ }
+diff --git a/xla/python/logging.cc b/xla/python/logging.cc
+index 2d8261f025..5222fa96c6 100644
+--- a/xla/python/logging.cc
++++ b/xla/python/logging.cc
+@@ -16,12 +16,17 @@ limitations under the License.
+ #include "xla/python/logging.h"
+ 
+ #include "absl/log/initialize.h"
++#include "absl/log/internal/globals.h"
+ 
+ namespace xla {
+ 
+ // TODO(phawkins): We can't import absl logging in the same file as TSL logging
+ // because of conflicting definitions. We should fix this by using ABSL logging
+ // everywhere.
+-void InitializeAbslLogging() { absl::InitializeLog(); }
++void InitializeAbslLogging() {
++  if (!absl::log_internal::IsInitialized()) {
++    absl::InitializeLog();
++  }
++}
+ 
+ }  // namespace xla
diff --git a/third_party/xla/workspace.bzl b/third_party/xla/workspace.bzl
index 185ee6a39..a7d083e08 100644
--- a/third_party/xla/workspace.bzl
+++ b/third_party/xla/workspace.bzl
@@ -30,6 +30,13 @@ def repo():
         sha256 = XLA_SHA256,
         strip_prefix = "xla-{commit}".format(commit = XLA_COMMIT),
         urls = tf_mirror_urls("https://github.com/openxla/xla/archive/{commit}.tar.gz".format(commit = XLA_COMMIT)),
+        patch_file = [
+            "//third_party/xla:0001-Support-third-party-build-of-boringssl.patch",
+            "//third_party/xla:0002-Fix-abseil-headers.patch",
+            "//third_party/xla:0003-Omit-usage-of-StrFormat.patch",
+            "//third_party/xla:0004-Add-missing-bits-absl-systemlib.patch",
+            "//third_party/xla:0005-Check-whether-absl-log-is-already-initialized.patch",
+        ],
     )
 
     # For development, one often wants to make changes to the TF repository as well
