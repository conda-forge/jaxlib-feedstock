# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-

jobs:
- job: osx
  pool:
    vmImage: macOS-11
  strategy:
    matrix:
      osx_64_libgrpc1.54libprotobuf3.21python3.10.____cpython:
        CONFIG: osx_64_libgrpc1.54libprotobuf3.21python3.10.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_libgrpc1.54libprotobuf3.21py_hb1e7d40f55
      osx_64_libgrpc1.54libprotobuf3.21python3.11.____cpython:
        CONFIG: osx_64_libgrpc1.54libprotobuf3.21python3.11.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_libgrpc1.54libprotobuf3.21py_h277fffe670
      osx_64_libgrpc1.54libprotobuf3.21python3.9.____cpython:
        CONFIG: osx_64_libgrpc1.54libprotobuf3.21python3.9.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_libgrpc1.54libprotobuf3.21py_hc2d03d88bc
      osx_64_libgrpc1.56libprotobuf4.23.3python3.10.____cpython:
        CONFIG: osx_64_libgrpc1.56libprotobuf4.23.3python3.10.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_libgrpc1.56libprotobuf4.23.3_h3232658bec
      osx_64_libgrpc1.56libprotobuf4.23.3python3.11.____cpython:
        CONFIG: osx_64_libgrpc1.56libprotobuf4.23.3python3.11.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_libgrpc1.56libprotobuf4.23.3_h71cf6678b7
      osx_64_libgrpc1.56libprotobuf4.23.3python3.9.____cpython:
        CONFIG: osx_64_libgrpc1.56libprotobuf4.23.3python3.9.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_libgrpc1.56libprotobuf4.23.3_h5b8efc17d4
      osx_arm64_libgrpc1.54libprotobuf3.21python3.10.____cpython:
        CONFIG: osx_arm64_libgrpc1.54libprotobuf3.21python3.10.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_libgrpc1.54libprotobuf3.2_h57fccf26f3
      osx_arm64_libgrpc1.54libprotobuf3.21python3.11.____cpython:
        CONFIG: osx_arm64_libgrpc1.54libprotobuf3.21python3.11.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_libgrpc1.54libprotobuf3.2_h92238ab61f
      osx_arm64_libgrpc1.54libprotobuf3.21python3.9.____cpython:
        CONFIG: osx_arm64_libgrpc1.54libprotobuf3.21python3.9.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_libgrpc1.54libprotobuf3.2_h1e07652de2
      osx_arm64_libgrpc1.56libprotobuf4.23.3python3.10.____cpython:
        CONFIG: osx_arm64_libgrpc1.56libprotobuf4.23.3python3.10.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_libgrpc1.56libprotobuf4.2_h8a78c84293
      osx_arm64_libgrpc1.56libprotobuf4.23.3python3.11.____cpython:
        CONFIG: osx_arm64_libgrpc1.56libprotobuf4.23.3python3.11.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_libgrpc1.56libprotobuf4.2_h906a99b8c1
      osx_arm64_libgrpc1.56libprotobuf4.23.3python3.9.____cpython:
        CONFIG: osx_arm64_libgrpc1.56libprotobuf4.23.3python3.9.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_libgrpc1.56libprotobuf4.2_h2b62443f19
  timeoutInMinutes: 360

  steps:
  # TODO: Fast finish on azure pipelines?
  - script: |
      export CI=azure
      export OSX_FORCE_SDK_DOWNLOAD="1"
      export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
      export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
      if [[ "${BUILD_REASON:-}" == "PullRequest" ]]; then
        export IS_PR_BUILD="True"
      else
        export IS_PR_BUILD="False"
      fi
      ./.scripts/run_osx_build.sh
    displayName: Run OSX build
    env:
      BINSTAR_TOKEN: $(BINSTAR_TOKEN)
      FEEDSTOCK_TOKEN: $(FEEDSTOCK_TOKEN)
      STAGING_BINSTAR_TOKEN: $(STAGING_BINSTAR_TOKEN)
  - script: |
      export CI=azure
      export CI_RUN_ID=$(build.BuildNumber).$(system.JobAttempt)
      export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
      export CONDA_BLD_DIR=/Users/runner/miniforge3/conda-bld
      export ARTIFACT_STAGING_DIR="$(Build.ArtifactStagingDirectory)"
      # Archive everything in CONDA_BLD_DIR except environments
      export BLD_ARTIFACT_PREFIX=conda_artifacts
      if [[ "$AGENT_JOBSTATUS" == "Failed" ]]; then
        # Archive the CONDA_BLD_DIR environments only when the job fails
        export ENV_ARTIFACT_PREFIX=conda_envs
      fi
      ./.scripts/create_conda_build_artifacts.sh
    displayName: Prepare conda build artifacts
    condition: succeededOrFailed()

  - task: PublishPipelineArtifact@1
    displayName: Store conda build artifacts
    condition: not(eq(variables.BLD_ARTIFACT_PATH, ''))
    inputs:
      targetPath: $(BLD_ARTIFACT_PATH)
      artifactName: $(BLD_ARTIFACT_NAME)

  - task: PublishPipelineArtifact@1
    displayName: Store conda build environment artifacts
    condition: not(eq(variables.ENV_ARTIFACT_PATH, ''))
    inputs:
      targetPath: $(ENV_ARTIFACT_PATH)
      artifactName: $(ENV_ARTIFACT_NAME)